{{define "page"}}
    <h1>{{ if not .Content }}Create{{ else }}Edit{{ end }} an Article</h1>
    <form id="article-form">
        <div>
            <label for="vocabulary">Vocabulary:</label>
            <div id="vocab-list">
                {{- if .Vocabulary }}
                    {{- range .Vocabulary }}
                        <div>{{ .Word }}</div>
                        <div>{{ .Definition }}</div>
                        <div>{{ .Examples }}</div>
                        <div>{{ .Translation }}</div>
                        <input type="hidden" name="vocabulary" value="{{ .ID }}">
                    {{- end }}
                {{- end }}
            </div>
            <div id="vocab-add">
                <input type="text" id="vocab-word" placeholder="Add new word">
                <button type="button" id="add-vocab-btn">Add</button>
            </div>
        </div>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('add-vocab-btn').onclick = function() {
            const word = document.getElementById('vocab-word').value.trim();
            if (!word) return;
            fetch('/api/vocabulary/get-or-create', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ word })
            })
            .then(res => res.json())
            .then(vocab => {
                addVocabToList(vocab);
                document.getElementById('vocab-word').value = '';
            });
        };
        function addVocabToList(vocab) {
            const container = document.getElementById('vocab-list');
            const div = document.createElement('div');
            div.textContent = vocab.word;
            container.appendChild(div);
            // Add hidden input for vocab id, using name="vocabulary"
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'vocabulary';
            input.value = vocab.id;
            container.appendChild(input);
        }

        // Handle form submit via JS and send JSON to /api/articles or /api/articles/:id
        document.getElementById('article-form').onsubmit = async function(e) {
            e.preventDefault();
            const form = e.target;
            // Convert date fields to RFC3339 format
            function toRFC3339(dateStr) {
                if (!dateStr) return null;
                return new Date(dateStr + 'T00:00:00Z').toISOString();
            }
            let data = {
                headline: form.headline.value,
                headline_en: form.headline_en.value,
                content: form.content.value,
                summary: form.summary.value,
                context: form.context.value,
                topik_level: form.topik_level.value ? parseInt(form.topik_level.value) : null,
                topik_level_explanation: form.topik_level_explanation.value,
                comprehension_questions: form.comprehension_questions.value,
                published: form.published.checked,
                source_published: toRFC3339(form.source_published.value),
                source_accessed: toRFC3339(form.source_accessed.value),
                source_url: form.source_url.value,
                source_publication: form.source_publication.value,
                source_author: form.source_author.value,
                vocabulary: Array.from(form.querySelectorAll('input[name="vocabulary"]')).map(i => parseInt(i.value))
            };
            let url = '/api/articles';
            let method = 'POST';
            if (form.dataset.id) {
                url = `/api/articles/${form.dataset.id}`;
                method = 'PUT';
            }
            try {
                const res = await fetch(url, {
                    method,
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });
                if (!res.ok) throw new Error(await res.text());
                alert('Article saved successfully!');
                if (!form.dataset.id) {
                    form.reset();
                    document.getElementById('vocab-list').innerHTML = '';
                }
            } catch (err) {
                alert('Error: ' + err.message);
            }
        };
    });
    </script>
        <div>
            <label for="headline">Headline:</label>
            <input 
            type="text" 
            id="headline" 
            name="headline" 
            value="{{ if .Headline }}{{ .Headline }}{{ end }}"
            required
            >
        </div>
        <div>
            <label for="headline_en">Headline (English):</label>
            <input 
            type="text" 
            id="headline_en" 
            name="headline_en" 
            value="{{ if .HeadlineEn }}{{ .HeadlineEn }}{{ end }}"
            >
        </div>
        <div>
            <label for="content">Content:</label>
            <textarea 
            id="content" 
            name="content" 
            rows="10" 
            required
            >{{ if .Content }}{{ .Content }}{{ end }}</textarea>
        </div>
        <div>
            <label for="summary">Summary:</label>
            <textarea 
            id="summary" 
            name="summary" 
            rows="3"
            >{{ if .Summary }}{{ .Summary }}{{ end }}</textarea>
        </div>
        <div>
            <label for="context">Context:</label>
            <textarea 
            id="context" 
            name="context" 
            rows="2"
            >{{ if .Context }}{{ .Context }}{{ end }}</textarea>
        </div>
        <div>
            <label for="topik_level">TOPIK Level:</label>
            <input 
            type="number" 
            id="topik_level" 
            name="topik_level" 
            min="1" max="6"
            value="{{ if .TopikLevel }}{{ .TopikLevel }}{{ end }}"
            >
        </div>
        <div>
            <label for="topik_level_explanation">TOPIK Level Explanation:</label>
            <input 
            type="text" 
            id="topik_level_explanation" 
            name="topik_level_explanation" 
            value="{{ if .TopikLevelExplanation }}{{ .TopikLevelExplanation }}{{ end }}"
            >
        </div>
        <div>
            <label for="comprehension_questions">Comprehension Questions:</label>
            <textarea 
            id="comprehension_questions" 
            name="comprehension_questions" 
            rows="3"
            >{{ if .ComprehensionQuestions }}{{ .ComprehensionQuestions }}{{ end }}</textarea>
        </div>
        <div>
            <label for="source_published">Source Published:</label>
            <input 
            type="date" 
            id="source_published" 
            name="source_published" 
            value="{{ if .SourcePublished }}{{ .SourcePublished.Format "2006-01-02" }}{{ end }}"
            >
        </div>
        <div>
            <label for="source_accessed">Source Accessed:</label>
            <input 
            type="date" 
            id="source_accessed" 
            name="source_accessed" 
            value="{{ if .SourceAccessed }}{{ .SourceAccessed.Format "2006-01-02" }}{{ end }}"
            >
        </div>
        <div>
            <label for="source_url">Source URL:</label>
            <input 
            type="url" 
            id="source_url" 
            name="source_url" 
            value="{{ if .SourceURL }}{{ .SourceURL }}{{ end }}"
            >
        </div>
        <div>
            <label for="source_publication">Source Publication:</label>
            <input 
            type="text" 
            id="source_publication" 
            name="source_publication" 
            value="{{ if .SourcePublication }}{{ .SourcePublication }}{{ end }}"
            >
        </div>
        <div>
            <label for="source_author">Source Author:</label>
            <input 
            type="text" 
            id="source_author" 
            name="source_author" 
            value="{{ if .SourceAuthor }}{{ .SourceAuthor }}{{ end }}"
            >
        </div>
        <div>
            <label for="published">Published:</label>
            <input 
            type="checkbox" 
            id="published" 
            name="published"
            {{ if .Published }}checked{{ end }}
            >
        </div>
        <button type="submit">
            {{ if .ID }}Update{{ else }}Create{{ end }}
        </button>
        <script>
        // Set form data-id if editing
        document.addEventListener('DOMContentLoaded', function() {
            var form = document.getElementById('article-form');
            {{ if .ID }}form.dataset.id = '{{ .ID }}';{{ end }}
        });
        </script>
    </form>
{{end}}